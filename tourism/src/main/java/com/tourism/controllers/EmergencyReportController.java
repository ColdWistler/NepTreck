package com.tourism.controllers;

import com.tourism.utils.FileDataManager;
import com.tourism.utils.SessionManager;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.TextArea;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class EmergencyReportController {

    @FXML
    private TextArea emergencyDetails;

    @FXML
    private void handleSubmitEmergency() {
        String message = emergencyDetails.getText().trim();
        if (message.isEmpty()) {
            showAlert("Validation Error", "Please enter emergency details.");
            return;
        }

        String username = SessionManager.getCurrentUser().getUsername();
        FileDataManager.logActivity(username, "Emergency reported: " + message);

        // --- New functionality to generate and save report to .txt file ---
        try {
            // Get current date and time for the report
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd_HH-mm-ss");
            String timestamp = now.format(formatter);

            // Prepare the report content
            String reportContent = String.format(
                    "EMERGENCY REPORT\n" +
                            "--------------------------------------------------\n" +
                            "Date/Time: %s\n" +
                            "Reported By: %s\n" +
                            "Emergency Details:\n%s\n" +
                            "--------------------------------------------------\n" +
                            "This report was generated by the Tourism Management App.",
                    now.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")),
                    username,
                    message
            );

            // Create a FileChooser
            FileChooser fileChooser = new FileChooser();
            fileChooser.setTitle("Save Emergency Report");
            fileChooser.setInitialFileName("Emergency_Report_" + timestamp + ".txt");
            fileChooser.getExtensionFilters().add(
                    new FileChooser.ExtensionFilter("Text Files (*.txt)", "*.txt")
            );

            // Get the current stage (window) to show the file dialog
            // This assumes the TextArea is part of a scene that has a window.
            // You might need to pass the stage explicitly if this doesn't work.
            Stage stage = (Stage) emergencyDetails.getScene().getWindow();
            File file = fileChooser.showSaveDialog(stage);

            if (file != null) {
                // Write the content to the selected file
                try (FileWriter fileWriter = new FileWriter(file)) {
                    fileWriter.write(reportContent);
                    showAlert("Success", "Emergency report saved successfully to: " + file.getAbsolutePath());
                } catch (IOException e) {
                    showAlert("Error", "Failed to save emergency report: " + e.getMessage());
                    e.printStackTrace();
                }
            } else {
                showAlert("Info", "Emergency report save cancelled.");
            }

        } catch (Exception e) {
            // Catch any other unexpected exceptions
            showAlert("Error", "An unexpected error occurred: " + e.getMessage());
            e.printStackTrace();
        }
        // --- End of new functionality ---

        showAlert("Success", "Emergency reported successfully."); // Original success alert
        emergencyDetails.clear();
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
}
